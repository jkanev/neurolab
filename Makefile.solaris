
FLAGS = -g -Wall
LIBRARYVERSION = 0:0:0
PACKAGENAME = libneurolab0.0
IPATHS = -I/home/ni/jacobk/gsl/include/gsl -I/home/ni/jacobk/gsl/include -I/home/ni/jacobk/include -I/home/ni/jacobk/include/boost
LPATHS = -L/home/ni/jacobk/lib -L/home/ni/jacobk/gsl/lib
LIBS = -lm -lgsl -lgslcblas
LIBRARY = $(DESTDIR)/lib/libneurolab.so
DEFINES = -D_GNUPLOT_CALL="\"/opt/csw/bin/gnuplot \""
LIBTAG = --tag=CXX



OBJECTS = obj/differentiable.o obj/processes.o obj/display.o obj/processestimator.o obj/conditionalestimator.o obj/scalarestimator.o obj/intervalestimator.o obj/matrix.o obj/ifneuron.o obj/synapse.o obj/wiener.o obj/function.o obj/physical.o obj/neuron.o obj/thetaneuron.o obj/noises.o obj/stochastic.o

TESTPROGRAMS = $(DESTDIR)/usr/bin/neurolab/CoupledNeurons $(DESTDIR)/usr/bin/neurolab/ItoVsStrat $(DESTDIR)/usr/bin/neurolab/ItoVsStrat2 $(DESTDIR)/usr/bin/neurolab/ItoVsStrat3 $(DESTDIR)/usr/bin/neurolab/Functions $(DESTDIR)/usr/bin/neurolab/NoiseTest

RSCPROGRAMS = $(DESTDIR)/usr/bin/neurolab/high_frequency $(DESTDIR)/usr/bin/neurolab/standard_settings $(DESTDIR)/usr/bin/neurolab/unconditional_voltage $(DESTDIR)/usr/bin/neurolab/single_stimulus rsc/resetless_voltage $(DESTDIR)/usr/bin/neurolab/tug_of_war $(DESTDIR)/usr/bin/neurolab/signal_transmission $(DESTDIR)/usr/bin/neurolab/synaptic_relations $(DESTDIR)/usr/bin/neurolab/negative rsc/ornstein_uhlenbeck

all: link

docs:
	doxygen neurolab.doxygen

archive: clean
	cd ..; tar cvvjf neurolab.tar.bz2 neurolab/ --exclude *~ --exclude *.data --exclude *.gnuplot --exclude *.ps; cd neurolab

install: installLib installHeaders

installDocs:
	install -d $(DESTDIR)/usr/share/doc/neurolab/html/
	install -m555 doc/html/* $(DESTDIR)/usr/share/doc/neurolab/html/

installLib:
	install -d $(DESTDIR)/lib
	libtool --mode=install install -m555 libneurolab.* $(DESTDIR)/lib/
	libtool --finish $(DESTDIR)/lib

installHeaders:
	install -d $(DESTDIR)/include/neurolab/
	install -m555 h/* $(DESTDIR)/include/neurolab/

link: $(OBJECTS)
	libtool --mode=link --tag=disable-static g++ -rpath $(DESTDIR)/lib -version-info $(LIBRARYVERSION) $(IPATHS) $(LPATHS) obj/*.lo -o libneurolab.la

bin/NoiseTest: src/NoiseTest.cxx h/covariation.hxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/NoiseTest.cxx -o bin/NoiseTest $(LIBS) -lneurolab

bin/Functions: src/Functions.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/Functions.cxx -o bin/Functions $(LIBS) -lneurolab

bin/TestStratonovich: src/TestStratonovich.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/TestStratonovich.cxx -o bin/TestStratonovich $(LIBS) -lneurolab

bin/ItoVsStrat: src/ItoVsStrat.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/ItoVsStrat.cxx -o bin/ItoVsStrat $(LIBS) -lneurolab

bin/ItoVsStrat2: src/ItoVsStrat2.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/ItoVsStrat2.cxx -o bin/ItoVsStrat2 $(LIBS) -lneurolab

bin/ItoVsStrat3: src/TestStratonovich.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/TestStratonovich.cxx -o bin/ItoVsStrat3 $(LIBS) -lneurolab

bin/CoupledNeurons: src/CoupledNeurons.cxx $(LIBRARY)
	g++ $(FLAGS) $(DEFINES) $(IPATHS) $(LPATHS) src/CoupledNeurons.cxx -o bin/CoupledNeurons $(LIBS) -lneurolab

# object files

obj/matrix.o: src/matrix.cxx h/matrix.hxx obj/physical.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/matrix.cxx -o obj/matrix.o

obj/function.o: src/function.cxx h/function.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/function.cxx -o obj/function.o

obj/display.o: src/display.cxx h/display.hxx src/function.cxx h/function.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/display.cxx -o obj/display.o

obj/processes.o: obj/differentiable.o h/processes.hxx obj/stochastic.o h/physical.hxx src/processes.cxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/processes.cxx -o obj/processes.o

obj/wiener.o: obj/differentiable.o h/wiener.hxx obj/stochastic.o h/physical.hxx src/wiener.cxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/wiener.cxx -o obj/wiener.o

obj/scalarestimator.o: src/scalarestimator.cxx h/scalarestimator.hxx h/estimator.hxx h/ring.hxx obj/stochastic.o obj/matrix.o h/graph.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/scalarestimator.cxx -o obj/scalarestimator.o

obj/intervalestimator.o: src/intervalestimator.cxx h/intervalestimator.hxx h/estimator.hxx h/ring.hxx obj/stochastic.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/intervalestimator.cxx -o obj/intervalestimator.o

obj/processestimator.o: src/processestimator.cxx h/processestimator.hxx h/estimator.hxx h/ring.hxx obj/stochastic.o h/matrix.hxx h/graph.hxx h/physical.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/processestimator.cxx -o obj/processestimator.o

obj/physical.o: h/physical.hxx src/physical.cxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/physical.cxx -o obj/physical.o

obj/conditionalestimator.o: src/conditionalestimator.cxx h/conditionalestimator.hxx h/estimator.hxx h/ring.hxx obj/stochastic.o h/matrix.hxx h/graph.hxx h/physical.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/conditionalestimator.cxx -o obj/conditionalestimator.o

obj/differentiable.o: h/differentiable.hxx src/differentiable.cxx obj/stochastic.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/differentiable.cxx -o obj/differentiable.o

obj/neuron.o: src/neuron.cxx h/neuron.hxx obj/differentiable.o obj/processes.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/neuron.cxx -o obj/neuron.o

obj/ifneuron.o: src/ifneuron.cxx h/ifneuron.hxx h/noises.hxx obj/neuron.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/ifneuron.cxx -o obj/ifneuron.o

obj/thetaneuron.o: src/thetaneuron.cxx h/thetaneuron.hxx obj/neuron.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/thetaneuron.cxx -o obj/thetaneuron.o

obj/synapse.o: src/synapse.cxx h/synapse.hxx obj/differentiable.o h/parametric.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS)  src/synapse.cxx -o obj/synapse.o
	
obj/noises.o: src/noises.cxx h/noises.hxx obj/stochastic.o obj/matrix.o
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS) src/noises.cxx -o obj/noises.o

obj/stochastic.o: h/stochastic.hxx
	libtool --mode=compile $(LIBTAG) g++ -c $(FLAGS) $(DEFINES) $(IPATHS) src/stochastic.cxx -o obj/stochastic.o

clean:
	rm obj/* || rm -r obj/.libs || rm bin/* || echo "cleaned"
